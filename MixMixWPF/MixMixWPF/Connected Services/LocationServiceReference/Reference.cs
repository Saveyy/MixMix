//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MixMixWPF.LocationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Zipcode", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Zipcode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MixMixWPF.LocationServiceReference.Country CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MixMixWPF.LocationServiceReference.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MixMixWPF.LocationServiceReference.Zipcode ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressName {
            get {
                return this.AddressNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressNameField, value) != true)) {
                    this.AddressNameField = value;
                    this.RaisePropertyChanged("AddressName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MixMixWPF.LocationServiceReference.Zipcode Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocationServiceReference.ILocationService")]
    public interface ILocationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/getCountries", ReplyAction="http://tempuri.org/ILocationService/getCountriesResponse")]
        MixMixWPF.LocationServiceReference.Country[] getCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/getCountries", ReplyAction="http://tempuri.org/ILocationService/getCountriesResponse")]
        System.Threading.Tasks.Task<MixMixWPF.LocationServiceReference.Country[]> getCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/getZipcodesById", ReplyAction="http://tempuri.org/ILocationService/getZipcodesByIdResponse")]
        MixMixWPF.LocationServiceReference.Zipcode[] getZipcodesById(int countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/getZipcodesById", ReplyAction="http://tempuri.org/ILocationService/getZipcodesByIdResponse")]
        System.Threading.Tasks.Task<MixMixWPF.LocationServiceReference.Zipcode[]> getZipcodesByIdAsync(int countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/createAddress", ReplyAction="http://tempuri.org/ILocationService/createAddressResponse")]
        MixMixWPF.LocationServiceReference.Address createAddress(string addressName, int zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/createAddress", ReplyAction="http://tempuri.org/ILocationService/createAddressResponse")]
        System.Threading.Tasks.Task<MixMixWPF.LocationServiceReference.Address> createAddressAsync(string addressName, int zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/updateAddress", ReplyAction="http://tempuri.org/ILocationService/updateAddressResponse")]
        MixMixWPF.LocationServiceReference.Address updateAddress(MixMixWPF.LocationServiceReference.Address address, int zipcodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/updateAddress", ReplyAction="http://tempuri.org/ILocationService/updateAddressResponse")]
        System.Threading.Tasks.Task<MixMixWPF.LocationServiceReference.Address> updateAddressAsync(MixMixWPF.LocationServiceReference.Address address, int zipcodeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/deleteAddress", ReplyAction="http://tempuri.org/ILocationService/deleteAddressResponse")]
        bool deleteAddress(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/deleteAddress", ReplyAction="http://tempuri.org/ILocationService/deleteAddressResponse")]
        System.Threading.Tasks.Task<bool> deleteAddressAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocationServiceChannel : MixMixWPF.LocationServiceReference.ILocationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocationServiceClient : System.ServiceModel.ClientBase<MixMixWPF.LocationServiceReference.ILocationService>, MixMixWPF.LocationServiceReference.ILocationService {
        
        public LocationServiceClient() {
        }
        
        public LocationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MixMixWPF.LocationServiceReference.Country[] getCountries() {
            return base.Channel.getCountries();
        }
        
        public System.Threading.Tasks.Task<MixMixWPF.LocationServiceReference.Country[]> getCountriesAsync() {
            return base.Channel.getCountriesAsync();
        }
        
        public MixMixWPF.LocationServiceReference.Zipcode[] getZipcodesById(int countryId) {
            return base.Channel.getZipcodesById(countryId);
        }
        
        public System.Threading.Tasks.Task<MixMixWPF.LocationServiceReference.Zipcode[]> getZipcodesByIdAsync(int countryId) {
            return base.Channel.getZipcodesByIdAsync(countryId);
        }
        
        public MixMixWPF.LocationServiceReference.Address createAddress(string addressName, int zipcode) {
            return base.Channel.createAddress(addressName, zipcode);
        }
        
        public System.Threading.Tasks.Task<MixMixWPF.LocationServiceReference.Address> createAddressAsync(string addressName, int zipcode) {
            return base.Channel.createAddressAsync(addressName, zipcode);
        }
        
        public MixMixWPF.LocationServiceReference.Address updateAddress(MixMixWPF.LocationServiceReference.Address address, int zipcodeId) {
            return base.Channel.updateAddress(address, zipcodeId);
        }
        
        public System.Threading.Tasks.Task<MixMixWPF.LocationServiceReference.Address> updateAddressAsync(MixMixWPF.LocationServiceReference.Address address, int zipcodeId) {
            return base.Channel.updateAddressAsync(address, zipcodeId);
        }
        
        public bool deleteAddress(int id) {
            return base.Channel.deleteAddress(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAddressAsync(int id) {
            return base.Channel.deleteAddressAsync(id);
        }
    }
}
