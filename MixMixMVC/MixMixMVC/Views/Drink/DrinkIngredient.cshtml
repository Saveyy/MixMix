@model MixMixMVC.Models.DrinkIngredientViewModel

@{
    ViewBag.Title = "DrinkIngredient";
}
<div class="container">
    <div class="center_container">
        <h4>Opret drink - Side 2 af 3</h4>
        <hr />
        <p>
            Tilføj ingredienser til din drink, <br />
            fortsæt indtil du er færdig
        </p>
        <hr />
        <div class="row">
            <form action="@Url.Action("DrinkIngredient", "Drink")" method="post">
                <div class="col-xs-12">
                    <p>Ingrediens</p>
                </div>
                <div class="col-xs-12">
                    @Html.DropDownList("ddlIngredient", new SelectList(Model.Ingredients, "id", "Name"))
                </div>
                <div class="col-xs-12">
                    <p>Mål</p>
                </div>
                <div class="col-xs-12">
                    @Html.DropDownList("ddlMeasurement", new SelectList(Model.Measurements, "Id", "Type"))
                </div>

                <div class="col-xs-12">
                    <p>Mængde</p>
                </div>
                <div class="col-xs-12">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-12">
                    <button class="btn btn-success" type="submit">Tilføj ingrediens</button>
                </div>
                <div class="col-xs-12">
                    @Html.ActionLink("Tilføj opskrift", "DrinkDecription", null, new {@class="btn btn-success"})
                </div>
            </form>
        </div>
    </div>
</div>








@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>DrinkIngredientViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Ingredient, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ingredient, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ingredient, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Measurement, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Measurement, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Measurement, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
