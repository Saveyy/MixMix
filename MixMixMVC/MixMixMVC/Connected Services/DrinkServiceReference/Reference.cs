//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MixMixMVC.DrinkServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MixMixMVC.DrinkServiceReference.Bar))]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bar", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Bar : MixMixMVC.DrinkServiceReference.Contact {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MixMixMVC.DrinkServiceReference.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MixMixMVC.DrinkServiceReference.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MixMixMVC.DrinkServiceReference.Zipcode ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressName {
            get {
                return this.AddressNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressNameField, value) != true)) {
                    this.AddressNameField = value;
                    this.RaisePropertyChanged("AddressName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MixMixMVC.DrinkServiceReference.Zipcode Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Zipcode", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Zipcode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MixMixMVC.DrinkServiceReference.Country CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MixMixMVC.DrinkServiceReference.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrinkViewModel", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class DrinkViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IngredientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PopNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ingredients {
            get {
                return this.IngredientsField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientsField, value) != true)) {
                    this.IngredientsField = value;
                    this.RaisePropertyChanged("Ingredients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PopName {
            get {
                return this.PopNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PopNameField, value) != true)) {
                    this.PopNameField = value;
                    this.RaisePropertyChanged("PopName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Drink", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Drink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.QuantifiedIngredient> IngredientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.QuantifiedIngredient> Ingredients {
            get {
                return this.IngredientsField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientsField, value) != true)) {
                    this.IngredientsField = value;
                    this.RaisePropertyChanged("Ingredients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipe {
            get {
                return this.RecipeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipeField, value) != true)) {
                    this.RecipeField = value;
                    this.RaisePropertyChanged("Recipe");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuantifiedIngredient", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class QuantifiedIngredient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MixMixMVC.DrinkServiceReference.Ingredient IngredientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MixMixMVC.DrinkServiceReference.Measurement MeasurementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MixMixMVC.DrinkServiceReference.Ingredient Ingredient {
            get {
                return this.IngredientField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientField, value) != true)) {
                    this.IngredientField = value;
                    this.RaisePropertyChanged("Ingredient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MixMixMVC.DrinkServiceReference.Measurement Measurement {
            get {
                return this.MeasurementField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasurementField, value) != true)) {
                    this.MeasurementField = value;
                    this.RaisePropertyChanged("Measurement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ingredient", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Ingredient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AlchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MeasurableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Alch {
            get {
                return this.AlchField;
            }
            set {
                if ((this.AlchField.Equals(value) != true)) {
                    this.AlchField = value;
                    this.RaisePropertyChanged("Alch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Measurable {
            get {
                return this.MeasurableField;
            }
            set {
                if ((this.MeasurableField.Equals(value) != true)) {
                    this.MeasurableField = value;
                    this.RaisePropertyChanged("Measurable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Measurement", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class Measurement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProportionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Proportion {
            get {
                return this.ProportionField;
            }
            set {
                if ((this.ProportionField.Equals(value) != true)) {
                    this.ProportionField = value;
                    this.RaisePropertyChanged("Proportion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DrinkServiceReference.IDrinkService")]
    public interface IDrinkService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/GetAvailableDrinks", ReplyAction="http://tempuri.org/IDrinkService/GetAvailableDrinksResponse")]
        System.Collections.Generic.Dictionary<int, MixMixMVC.DrinkServiceReference.DrinkViewModel> GetAvailableDrinks(MixMixMVC.DrinkServiceReference.Bar bar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/GetAvailableDrinks", ReplyAction="http://tempuri.org/IDrinkService/GetAvailableDrinksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, MixMixMVC.DrinkServiceReference.DrinkViewModel>> GetAvailableDrinksAsync(MixMixMVC.DrinkServiceReference.Bar bar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindDrinkPriceById", ReplyAction="http://tempuri.org/IDrinkService/FindDrinkPriceByIdResponse")]
        double FindDrinkPriceById(int drinkId, int barId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindDrinkPriceById", ReplyAction="http://tempuri.org/IDrinkService/FindDrinkPriceByIdResponse")]
        System.Threading.Tasks.Task<double> FindDrinkPriceByIdAsync(int drinkId, int barId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/CheckDrinkName", ReplyAction="http://tempuri.org/IDrinkService/CheckDrinkNameResponse")]
        bool CheckDrinkName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/CheckDrinkName", ReplyAction="http://tempuri.org/IDrinkService/CheckDrinkNameResponse")]
        System.Threading.Tasks.Task<bool> CheckDrinkNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/CreateDrink", ReplyAction="http://tempuri.org/IDrinkService/CreateDrinkResponse")]
        MixMixMVC.DrinkServiceReference.Drink CreateDrink(MixMixMVC.DrinkServiceReference.Drink drink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/CreateDrink", ReplyAction="http://tempuri.org/IDrinkService/CreateDrinkResponse")]
        System.Threading.Tasks.Task<MixMixMVC.DrinkServiceReference.Drink> CreateDrinkAsync(MixMixMVC.DrinkServiceReference.Drink drink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindAllIngredients", ReplyAction="http://tempuri.org/IDrinkService/FindAllIngredientsResponse")]
        System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.Ingredient> FindAllIngredients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindAllIngredients", ReplyAction="http://tempuri.org/IDrinkService/FindAllIngredientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.Ingredient>> FindAllIngredientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindAllMeasurements", ReplyAction="http://tempuri.org/IDrinkService/FindAllMeasurementsResponse")]
        System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.Measurement> FindAllMeasurements();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindAllMeasurements", ReplyAction="http://tempuri.org/IDrinkService/FindAllMeasurementsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.Measurement>> FindAllMeasurementsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindIngredient", ReplyAction="http://tempuri.org/IDrinkService/FindIngredientResponse")]
        MixMixMVC.DrinkServiceReference.Ingredient FindIngredient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindIngredient", ReplyAction="http://tempuri.org/IDrinkService/FindIngredientResponse")]
        System.Threading.Tasks.Task<MixMixMVC.DrinkServiceReference.Ingredient> FindIngredientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindMeasurement", ReplyAction="http://tempuri.org/IDrinkService/FindMeasurementResponse")]
        MixMixMVC.DrinkServiceReference.Measurement FindMeasurement(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrinkService/FindMeasurement", ReplyAction="http://tempuri.org/IDrinkService/FindMeasurementResponse")]
        System.Threading.Tasks.Task<MixMixMVC.DrinkServiceReference.Measurement> FindMeasurementAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDrinkServiceChannel : MixMixMVC.DrinkServiceReference.IDrinkService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DrinkServiceClient : System.ServiceModel.ClientBase<MixMixMVC.DrinkServiceReference.IDrinkService>, MixMixMVC.DrinkServiceReference.IDrinkService {
        
        public DrinkServiceClient() {
        }
        
        public DrinkServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DrinkServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DrinkServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DrinkServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<int, MixMixMVC.DrinkServiceReference.DrinkViewModel> GetAvailableDrinks(MixMixMVC.DrinkServiceReference.Bar bar) {
            return base.Channel.GetAvailableDrinks(bar);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, MixMixMVC.DrinkServiceReference.DrinkViewModel>> GetAvailableDrinksAsync(MixMixMVC.DrinkServiceReference.Bar bar) {
            return base.Channel.GetAvailableDrinksAsync(bar);
        }
        
        public double FindDrinkPriceById(int drinkId, int barId) {
            return base.Channel.FindDrinkPriceById(drinkId, barId);
        }
        
        public System.Threading.Tasks.Task<double> FindDrinkPriceByIdAsync(int drinkId, int barId) {
            return base.Channel.FindDrinkPriceByIdAsync(drinkId, barId);
        }
        
        public bool CheckDrinkName(string name) {
            return base.Channel.CheckDrinkName(name);
        }
        
        public System.Threading.Tasks.Task<bool> CheckDrinkNameAsync(string name) {
            return base.Channel.CheckDrinkNameAsync(name);
        }
        
        public MixMixMVC.DrinkServiceReference.Drink CreateDrink(MixMixMVC.DrinkServiceReference.Drink drink) {
            return base.Channel.CreateDrink(drink);
        }
        
        public System.Threading.Tasks.Task<MixMixMVC.DrinkServiceReference.Drink> CreateDrinkAsync(MixMixMVC.DrinkServiceReference.Drink drink) {
            return base.Channel.CreateDrinkAsync(drink);
        }
        
        public System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.Ingredient> FindAllIngredients() {
            return base.Channel.FindAllIngredients();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.Ingredient>> FindAllIngredientsAsync() {
            return base.Channel.FindAllIngredientsAsync();
        }
        
        public System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.Measurement> FindAllMeasurements() {
            return base.Channel.FindAllMeasurements();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MixMixMVC.DrinkServiceReference.Measurement>> FindAllMeasurementsAsync() {
            return base.Channel.FindAllMeasurementsAsync();
        }
        
        public MixMixMVC.DrinkServiceReference.Ingredient FindIngredient(int id) {
            return base.Channel.FindIngredient(id);
        }
        
        public System.Threading.Tasks.Task<MixMixMVC.DrinkServiceReference.Ingredient> FindIngredientAsync(int id) {
            return base.Channel.FindIngredientAsync(id);
        }
        
        public MixMixMVC.DrinkServiceReference.Measurement FindMeasurement(int id) {
            return base.Channel.FindMeasurement(id);
        }
        
        public System.Threading.Tasks.Task<MixMixMVC.DrinkServiceReference.Measurement> FindMeasurementAsync(int id) {
            return base.Channel.FindMeasurementAsync(id);
        }
    }
}
